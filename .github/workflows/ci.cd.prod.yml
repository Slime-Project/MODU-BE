name: CD

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    env:
      ENV_PATH: .env
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Make config folder
        run: mkdir -p config

      - name: Create .env file
        run: |
          touch ${{ env.ENV_PATH }}
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> ${{ env.DATABASE_URL }}
          echo JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET }} >> ${{ env.JWT_ACCESS_TOKEN_SECRET }}
          echo JWT_REFRESH_TOKEN_SECRET=${{ secrets.JWT_REFRESH_TOKEN_SECRET }} >> ${{ env.JWT_REFRESH_TOKEN_SECRET }}
          echo KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }} >> ${{ env.KAKAO_REST_API_KEY }}
          echo KAKAO_REDIRECT_URL=${{ secrets.KAKAO_REDIRECT_URL }} >> ${{ env.KAKAO_REDIRECT_URL }}
          echo KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} >> ${{ env.KAKAO_CLIENT_SECRET }}
          echo KAKAO_ADMIN_KEY=${{ secrets.KAKAO_ADMIN_KEY }} >> ${{ env.KAKAO_ADMIN_KEY }}
          echo SWAGGER_USER=${{ secrets.SWAGGER_USER }} >> ${{ env.SWAGGER_USER }}
          echo SWAGGER_PASSWORD=${{ secrets.SWAGGER_PASSWORD }} >> ${{ env.SWAGGER_PASSWORD }}
          echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> ${{ env.OPENAI_API_KEY }}
          echo NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }} >> ${{ env.NAVER_CLIENT_ID }}
          echo NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }} >> ${{ env.NAVER_CLIENT_SECRET }}
          echo AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }} >> ${{ env.AWS_S3_BUCKET_NAME }}
          echo AWS_S3_REGION=${{ secrets.AWS_S3_REGION }} >> ${{ env.AWS_S3_REGION }}
          echo AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }} >> ${{ env.AWS_S3_ACCESS_KEY }}
          echo AWS_S3_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }} >> ${{ env.AWS_S3_SECRET_ACCESS_KEY }}

      - name: Zip project files
        run: zip -r ./$GITHUB_SHA.zip .

      - name: Access to AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.S3_BUCKET_NAME }}/${{ env.S3_BUCKET_DIR_NAME }}/$GITHUB_SHA.zip

      - name: Deploy to EC2 with CodeDeploy
        run: aws deploy create-deployment
          --application-name codedeploy-app
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name ${{ env.DEPLOYMENT_GROUP_NAME }}
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=${{ env.S3_BUCKET_DIR_NAME }}/$GITHUB_SHA.zip
